<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Akosta</name>
    </assembly>
    <members>
        <member name="T:Akosta.API.Controllers.StudysController">
            <summary>
            Study's controller
            </summary>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.AddStudy(Akosta.API.Models.StudyAddDto)">
            <summary>
            Добавляет обучение и возвращает информацию о нём
            </summary>
            <param name="UserId">Id пользователя, к которому надо добавить обучение</param>
            <param name="SkillsInCource">Как называется</param>
            <param name="Store">На сколько процентов сделано</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.UpdateStudy(System.Int32,System.Int32)">
            <summary>
            Обновляет рейтинг прохождения курса у юзера
            </summary>
            <param name="studyId">Идентификатор курса у чела</param>
            <param name="store">На сколько процентов юзер прошёл его</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.GetStudy(System.Int32)">
            <summary>
            Возвращает обучение по id
            </summary>
            <param name="studyId">Идентификатор обучения</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.GetAllStudy(System.Int32,System.Int32,System.Int32)">
            <summary>
            Возвращает все обучения по id юзера
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <param name="count">Сколько обучений требуется</param>
            <param name="skipCount">Сколько обучений уже есть</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.DoesExistStudy(System.Int32)">
            <summary>
            Проверяет, существует ли обучение с указанным id
            </summary>
            <param name="studyId">Идентификатор обучения</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.DeleteStudy(System.Int32)">
            <summary>
            Возвращает получилось ли удалить обучение с указанным id или нет
            </summary>
            <param name="studyId">Идентификатор обучения</param>
        </member>
        <member name="M:Akosta.API.Controllers.StudysController.DeleteAllStudy(System.Int32)">
            <summary>
            Возвращает получилось ли удалить все обучения у пользователя с указанным id или нет
            </summary>
            <param name="userId">Идентификатор пользователя</param>
        </member>
        <member name="T:Akosta.API.Controllers.UsersController">
            <summary>
            User's controller
            </summary>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.RegistrationUser(Akosta.API.Models.UserRegistrDto)">
            <summary>
            Регистрирует пользователя в приложение и возвращает информацию о нём
            </summary>
            <param name="Telegram">Telegram пользователя</param>
            <param name="Name">Ник пользователя</param>
            <param name="Surname">Фамилия пользователя</param>
            <param name="FirstPassword">Первый пароль</param>
            <param name="SecondPassword">Второй пароль</param>
            <param name="IsWorker">Работник</param>
            <param name="Skill">Какая сфера деятельности</param>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.AuthenticationUser(Akosta.API.Models.UserIdentityDto)">
            <summary>
            Аутентифицирует пользователя в приложение и возвращает информацию о нём
            </summary>
            <param name="Telegram">Telegram пользователя</param>
            <param name="Password">Пароль</param>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.GetUser(System.Int32)">
            <summary>
            Возвращает информацию о пользователе приложения
            </summary>
            <param name="userId">Идентификатор пользователя</param>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.GetAllUserOfCriteria(Akosta.API.Models.UserCritetiaDto)">
            <summary>
            Возвращает всех пользователей по фильтрам
            </summary>
            <param name="critetia">Кретерии через пробел</param>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.DoesExistUser(System.Int32)">
            <summary>
            Проверяет, существует ли пользователь с указанным id
            </summary>
            <param name="userId">Идентификатор пользователя</param>
        </member>
        <member name="M:Akosta.API.Controllers.UsersController.DeleteUser(System.Int32)">
            <summary>
            Возвращает получилось ли удалить юзера с указанным id или нет
            </summary>
            <param name="userId">Идентификатор пользователя</param>
        </member>
    </members>
</doc>
